FROM nvidia/cuda:12.1.0-cudnn8-devel-ubuntu20.04
# non interactive apt
ENV DEBIAN_FRONTEND=noninteractive

# dependancies to add apt repos 
RUN apt-get update && apt-get install -y \
curl \
gpg \
wget \
lsb-release \
git \
nano \
python3-dev \
python3-pip \
&& rm -rf /var/lib/apt/lists/*

# install intel igpu drivers and openvino
RUN wget -qO - https://repositories.intel.com/graphics/intel-graphics.key | gpg --dearmor --output /usr/share/keyrings/intel-graphics.gpg
RUN echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/intel-graphics.gpg] https://repositories.intel.com/graphics/ubuntu focal main' | \
 tee -a /etc/apt/sources.list.d/intel.list
RUN apt-get update && apt-get install -y \
  intel-opencl-icd \
  intel-level-zero-gpu level-zero \
  intel-media-va-driver-non-free libmfx1 libmfxgen1 libvpl2 \
  libigc-dev \
  intel-igc-cm \
  libigdfcl-dev \
  libigfxcmrt-dev \
  level-zero-dev \
  && rm -rf /var/lib/apt/lists/*

RUN wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
RUN apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB

RUN echo "deb https://apt.repos.intel.com/openvino/2024 ubuntu20 main" | tee /etc/apt/sources.list.d/intel-openvino-2024.list
RUN apt-get update && apt-get install -y \
openvino \
&& rm -rf /var/lib/apt/lists/*

# Build onnxruntime from source
ARG DEVICE=AUTO:GPU,CPU
ARG ONNXRUNTIME_REPO=https://github.com/microsoft/onnxruntime.git
ARG ONNXRUNTIME_BRANCH=main
ENV WORKDIR_PATH=/
RUN git clone --recursive --depth 1 -b ${ONNXRUNTIME_BRANCH} ${ONNXRUNTIME_REPO}
RUN /bin/sh onnxruntime/dockerfiles/scripts/install_common_deps.sh
RUN ln -s cmake-* cmake-dir
ENV PATH=${WORKDIR_PATH}/cmake-dir/bin:$PATH
ENV INTEL_OPENVINO_DIR=/usr/lib/openvino-2024.0.0/
RUN cd onnxruntime && ./build.sh --allow_running_as_root --skip_submodule_sync --use_openvino ${DEVICE} \
 --cuda_home /usr/local/cuda --cudnn_home /usr/lib/x86_64-linux-gnu/ --use_cuda --config Release \
 --update --build --build_shared_lib --parallel 10 --cmake_extra_defines ONNXRUNTIME_VERSION=$(cat ./VERSION_NUMBER) 'CMAKE_CUDA_ARCHITECTURES=52;60;61;70;75;86' \
 && mkdir /opt/onnxruntime \
 && cp -r /onnxruntime/build/Linux/Release /opt/onnxruntime/lib \
 && cp -r /onnxruntime/include/ /opt/onnxruntime/ \
 && rm -rf /onnxruntime

RUN apt-get update && apt-get install -y \
clinfo \
# enables environment to point python to python3
python-is-python3 \
software-properties-common \
firefox \
uncrustify \
git-core \ 
bash-completion \
clang-format-12 \
sudo \
&& rm -rf /var/lib/apt/lists/* 

# enables auto complete in the terminal
RUN curl \
L https://raw.githubusercontent.com/docker/compose/v2.7.0/contrib/completion/bash/docker-compose \
-o /etc/bash_completion.d/docker-compose
ARG USERNAME=vscode

RUN useradd -rm -d /home/${USERNAME} -s /bin/bash -g root -G sudo -u 1000 ${USERNAME}
RUN echo "${USERNAME}:onnx" | chpasswd
USER ${USERNAME}
WORKDIR /home/${USERNAME}

RUN mkdir -p /home/${USERNAME}/yolov8-onnx-cpp

RUN echo 'source /usr/share/bash-completion/completions/git' >> /home/${USERNAME}/.bashrc

ENV NVIDIA_DRIVER_CAPABILITIES graphics,utility,compute